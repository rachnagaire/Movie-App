[{"E:\\Rachna\\vidly\\src\\index.js":"1","E:\\Rachna\\vidly\\src\\App.js":"2","E:\\Rachna\\vidly\\src\\reportWebVitals.js":"3","E:\\Rachna\\vidly\\src\\services\\authService.js":"4","E:\\Rachna\\vidly\\src\\components\\customers.jsx":"5","E:\\Rachna\\vidly\\src\\components\\movies.jsx":"6","E:\\Rachna\\vidly\\src\\components\\moviesForm.jsx":"7","E:\\Rachna\\vidly\\src\\components\\notFound.jsx":"8","E:\\Rachna\\vidly\\src\\components\\rentals.jsx":"9","E:\\Rachna\\vidly\\src\\components\\logout.jsx":"10","E:\\Rachna\\vidly\\src\\components\\loginForm.jsx":"11","E:\\Rachna\\vidly\\src\\components\\common\\protectedRoute.jsx":"12","E:\\Rachna\\vidly\\src\\components\\common\\header.jsx":"13","E:\\Rachna\\vidly\\src\\components\\registerForm.jsx":"14","E:\\Rachna\\vidly\\src\\services\\httpService.js":"15","E:\\Rachna\\vidly\\src\\services\\movieService.js":"16","E:\\Rachna\\vidly\\src\\services\\genreService.js":"17","E:\\Rachna\\vidly\\src\\services\\userSevice.js":"18","E:\\Rachna\\vidly\\src\\utils\\paginate.js":"19","E:\\Rachna\\vidly\\src\\components\\common\\pagination.jsx":"20","E:\\Rachna\\vidly\\src\\components\\searchBox.jsx":"21","E:\\Rachna\\vidly\\src\\components\\common\\filters.jsx":"22","E:\\Rachna\\vidly\\src\\components\\common\\form.jsx":"23","E:\\Rachna\\vidly\\src\\components\\moviesTable.jsx":"24","E:\\Rachna\\vidly\\src\\components\\common\\input.jsx":"25","E:\\Rachna\\vidly\\src\\components\\common\\select.jsx":"26","E:\\Rachna\\vidly\\src\\components\\common\\table.jsx":"27","E:\\Rachna\\vidly\\src\\components\\common\\like.jsx":"28","E:\\Rachna\\vidly\\src\\components\\common\\tableHeader.jsx":"29","E:\\Rachna\\vidly\\src\\components\\common\\tableBody.jsx":"30"},{"size":713,"mtime":1617470774502,"results":"31","hashOfConfig":"32"},{"size":2369,"mtime":1617210737624,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":499162500000,"results":"34","hashOfConfig":"32"},{"size":834,"mtime":1617470429850,"results":"35","hashOfConfig":"32"},{"size":120,"mtime":1611852347932,"results":"36","hashOfConfig":"32"},{"size":4679,"mtime":1617471265871,"results":"37","hashOfConfig":"32"},{"size":2976,"mtime":1617212076463,"results":"38","hashOfConfig":"32"},{"size":116,"mtime":1611769777248,"results":"39","hashOfConfig":"32"},{"size":115,"mtime":1611767045068,"results":"40","hashOfConfig":"32"},{"size":270,"mtime":1616867402018,"results":"41","hashOfConfig":"32"},{"size":1628,"mtime":1617212039923,"results":"42","hashOfConfig":"32"},{"size":708,"mtime":1617213098235,"results":"43","hashOfConfig":"32"},{"size":2419,"mtime":1617472845287,"results":"44","hashOfConfig":"32"},{"size":1652,"mtime":1616869121909,"results":"45","hashOfConfig":"32"},{"size":671,"mtime":1617470859549,"results":"46","hashOfConfig":"32"},{"size":568,"mtime":1617470498559,"results":"47","hashOfConfig":"32"},{"size":137,"mtime":1617470464582,"results":"48","hashOfConfig":"32"},{"size":227,"mtime":1617470547758,"results":"49","hashOfConfig":"32"},{"size":199,"mtime":1611163701328,"results":"50","hashOfConfig":"32"},{"size":1047,"mtime":1611505235557,"results":"51","hashOfConfig":"32"},{"size":321,"mtime":1614100316715,"results":"52","hashOfConfig":"32"},{"size":715,"mtime":1611485321421,"results":"53","hashOfConfig":"32"},{"size":2275,"mtime":1613843048763,"results":"54","hashOfConfig":"32"},{"size":1477,"mtime":1617214451207,"results":"55","hashOfConfig":"32"},{"size":401,"mtime":1612458619035,"results":"56","hashOfConfig":"32"},{"size":645,"mtime":1613842662832,"results":"57","hashOfConfig":"32"},{"size":473,"mtime":1617213622498,"results":"58","hashOfConfig":"32"},{"size":343,"mtime":1610902893723,"results":"59","hashOfConfig":"32"},{"size":1113,"mtime":1611424197263,"results":"60","hashOfConfig":"32"},{"size":786,"mtime":1611417917370,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"1hflvqv",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"64"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"64"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Rachna\\vidly\\src\\index.js",[],["130","131"],"E:\\Rachna\\vidly\\src\\App.js",[],"E:\\Rachna\\vidly\\src\\reportWebVitals.js",[],"E:\\Rachna\\vidly\\src\\services\\authService.js",["132"],"import jwtDecode from \"jwt-decode\";\r\nimport http from \"./httpService\";\r\n\r\nconst apiEndPoint = \"auth\";\r\nconst tokenKey = \"token\";\r\n\r\nhttp.setJwt(getJwt());\r\n\r\nexport async function login(email, password) {\r\n  const { data: jwt } = await http.post(apiEndPoint, {\r\n    email: email,\r\n    password: password,\r\n  });\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\nexport function loginWithJwt(jwt) {\r\n  localStorage.setItem(tokenKey, jwt);\r\n}\r\nexport function logout() {\r\n  localStorage.removeItem(tokenKey);\r\n}\r\nexport function getCurrentUser() {\r\n  try {\r\n    const jwt = localStorage.getItem(tokenKey);\r\n    return jwtDecode(jwt);\r\n  } catch (ex) {\r\n    return null;\r\n  }\r\n}\r\nexport function getJwt() {\r\n  return localStorage.getItem(tokenKey);\r\n}\r\nexport default {\r\n  login,\r\n  loginWithJwt,\r\n  logout,\r\n  getCurrentUser,\r\n  getJwt,\r\n};\r\n","E:\\Rachna\\vidly\\src\\components\\customers.jsx",[],"E:\\Rachna\\vidly\\src\\components\\movies.jsx",["133","134","135"],"import React, { Component } from \"react\";\r\n\r\nimport Pagination from \"./common/pagination\";\r\nimport { toast } from \"react-toastify\";\r\nimport { paginate } from \"../utils/paginate\";\r\nimport Filters from \"./common/filters\";\r\nimport MoviesTable from \"./moviesTable\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { user } from \"../services/authService\";\r\nimport _ from \"lodash\";\r\nimport { deleteMovie, getMovies } from \"../services/movieService\";\r\nimport { getGenres } from \"../services/genreService\";\r\nimport SearchBox from \"./searchBox\";\r\n\r\nclass Movies extends Component {\r\n  state = {\r\n    movies: [],\r\n    genres: [],\r\n    currentPage: 1,\r\n    pageSize: 4,\r\n    searchQuery: \"\",\r\n    selectedGenre: null,\r\n    sortColumn: { path: \"title\", order: \"asc\" },\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { data } = await getGenres();\r\n    const { data: movies } = await getMovies();\r\n\r\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...data];\r\n    this.setState({ movies, genres });\r\n  }\r\n\r\n  handleDelete = async (movie) => {\r\n    const originalMovies = this.state.movies;\r\n    const movies = originalMovies.filter((m) => m._id !== movie._id);\r\n    this.setState({ movies });\r\n\r\n    try {\r\n      debugger;\r\n      await deleteMovie(movie._id);\r\n      toast.success(\"This movie is successfully deleted.\");\r\n    } catch (ex) {\r\n      if (ex.response && ex.response === 404) {\r\n        toast.error(\"This movie has already been deleted\");\r\n      }\r\n      this.setState({ movies: originalMovies });\r\n    }\r\n  };\r\n  handleLike = (movie) => {\r\n    const movies = [...this.state.movies];\r\n    const index = movies.indexOf(movie);\r\n    movies[index] = { ...movies[index] };\r\n    movies[index].liked = !movies[index].liked;\r\n\r\n    this.setState({ movies });\r\n  };\r\n  handlePageChange = (page) => {\r\n    this.setState({ currentPage: page });\r\n  };\r\n  handleGenreSelect = (genre) => {\r\n    this.setState({ selectedGenre: genre, searchQuery: \"\", currentPage: 1 });\r\n  };\r\n  handleSearch = (query) => {\r\n    this.setState({ searchQuery: query, selectedGenre: null, currentPage: 1 });\r\n  };\r\n  handleSort = (sortColumn) => {\r\n    this.setState({ sortColumn });\r\n  };\r\n  getPagedData = () => {\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      movies: allMovies,\r\n    } = this.state;\r\n    let filtered = allMovies;\r\n    if (searchQuery)\r\n      filtered = allMovies.filter((m) =>\r\n        m.title.toLowerCase().startsWith(searchQuery.toLowerCase())\r\n      );\r\n    else if (selectedGenre && selectedGenre._id)\r\n      filtered = allMovies.filter((m) => m.genre._id === selectedGenre._id);\r\n\r\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\r\n    const movies = paginate(sorted, currentPage, pageSize);\r\n    return { totalCount: filtered.length, data: movies };\r\n  };\r\n\r\n  render() {\r\n    const { length: count } = this.state.movies;\r\n    const {\r\n      currentPage,\r\n      pageSize,\r\n      sortColumn,\r\n      selectedGenre,\r\n      searchQuery,\r\n      genres,\r\n    } = this.state;\r\n    const user = this.props;\r\n    // if (count === 0) {\r\n    //   return (\r\n    //     <p className=\"pt-5 mx-auto\">There is no movies in our database.</p>\r\n    //   );\r\n    // }\r\n    const { totalCount, data: movies } = this.getPagedData();\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <div className=\"row\">\r\n          <div className=\"col-lg-4\">\r\n            <Filters\r\n              items={genres}\r\n              selectedGenre={selectedGenre}\r\n              onItemSelect={this.handleGenreSelect}\r\n            />\r\n          </div>\r\n          <div className=\"col-lg-8\">\r\n            {this.props.user && (\r\n              <Link className=\"btn btn-primary mb-3\" to={`/movies/new`}>\r\n                Add New Movies\r\n              </Link>\r\n            )}\r\n\r\n            <p className=\"mx-auto\">\r\n              Showing {totalCount} movies in the database\r\n            </p>\r\n            <SearchBox\r\n              value={searchQuery}\r\n              onChange={this.handleSearch}\r\n            ></SearchBox>\r\n            <MoviesTable\r\n              onLike={this.handleLike}\r\n              onDelete={this.handleDelete}\r\n              movies={movies}\r\n              onSort={this.handleSort}\r\n              sortColumn={sortColumn}\r\n            ></MoviesTable>\r\n\r\n            <Pagination\r\n              itemsCount={totalCount}\r\n              pageSize={pageSize}\r\n              currentPage={currentPage}\r\n              onPageChange={this.handlePageChange}\r\n            />\r\n          </div>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movies;\r\n","E:\\Rachna\\vidly\\src\\components\\moviesForm.jsx",[],"E:\\Rachna\\vidly\\src\\components\\notFound.jsx",[],"E:\\Rachna\\vidly\\src\\components\\rentals.jsx",[],"E:\\Rachna\\vidly\\src\\components\\logout.jsx",["136"],"import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass Logout extends Component {\r\n  componentDidMount() {\r\n    auth.logout();\r\n\r\n    window.location = \"/\";\r\n  }\r\n  render() {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport default Logout;\r\n","E:\\Rachna\\vidly\\src\\components\\loginForm.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\protectedRoute.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\header.jsx",[],"E:\\Rachna\\vidly\\src\\components\\registerForm.jsx",["137"],"import React from \"react\";\r\n\r\nimport Joi, { errors } from \"joi-browser\";\r\nimport Form from \"./common/form\";\r\n\r\nimport * as userService from \"../services/userSevice\";\r\nimport auth from \"../services/authService\";\r\n\r\nclass RegisterForm extends Form {\r\n  state = {\r\n    data: { username: \"\", password: \"\", name: \"\" },\r\n    errors: {},\r\n  };\r\n  schema = {\r\n    username: Joi.string().required().label(\"Username\"),\r\n    password: Joi.string().required().min(5).label(\"Password\"),\r\n    name: Joi.string().required().label(\"Name\"),\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const errors = this.validate();\r\n\r\n    this.setState({ errors: errors || {} });\r\n    if (errors) return;\r\n\r\n    this.doSubmit();\r\n  };\r\n  doSubmit = async () => {\r\n    try {\r\n      const response = await userService.register(this.state.data);\r\n      auth.loginWithJwt(response.headers[\"x-auth-token\"]);\r\n      window.location = \"/\";\r\n    } catch (ex) {\r\n      if (ex.response && ex.response.status === 400) {\r\n        const errors = { ...this.state.errors };\r\n        errors.username = ex.response.data;\r\n        this.setState({ errors });\r\n      }\r\n    }\r\n  };\r\n  render() {\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-lg-8 offset-lg-2\">\r\n          <h1>Register Form</h1>\r\n          <form onSubmit={this.handleSubmit}>\r\n            {this.renderInput(\"username\", \"Username\")}\r\n            {this.renderInput(\"password\", \"Password\", \"password\")}\r\n            {this.renderInput(\"name\", \"Name\")}\r\n            {this.renderButton(\"Register\")}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RegisterForm;\r\n","E:\\Rachna\\vidly\\src\\services\\httpService.js",["138","139"],"import axios from \"axios\";\r\nimport { toast, Toast } from \"react-toastify\";\r\n\r\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\r\n\r\naxios.interceptors.response.use(null, (error) => {\r\n  const expectedError =\r\n    error.response &&\r\n    error.response.status >= 400 &&\r\n    error.response.status < 500;\r\n  if (!expectedError) {\r\n    console.log(\"Logging the error\", error);\r\n    toast.error(\"Unexpected errors occured\");\r\n  }\r\n  return Promise.reject(error);\r\n});\r\n\r\nfunction setJwt(jwt) {\r\n  axios.defaults.headers.common[\"x-auth-token\"] = jwt;\r\n}\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete,\r\n  setJwt,\r\n};\r\n","E:\\Rachna\\vidly\\src\\services\\movieService.js",[],"E:\\Rachna\\vidly\\src\\services\\genreService.js",[],"E:\\Rachna\\vidly\\src\\services\\userSevice.js",[],"E:\\Rachna\\vidly\\src\\utils\\paginate.js",[],"E:\\Rachna\\vidly\\src\\components\\common\\pagination.jsx",["140"],"import React from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nimport propTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, currentPage, onPageChange }) => {\r\n  const pageCount = Math.ceil(itemsCount / pageSize);\r\n  if (pageCount === 1) return null;\r\n  const pages = _.range(1, pageCount + 1);\r\n  console.log(currentPage);\r\n\r\n  return (\r\n    <nav>\r\n      <ul className=\"pagination\">\r\n        {pages.map((page) => (\r\n          <li\r\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\r\n            key={page}\r\n          >\r\n            <a\r\n              className=\"page-link\"\r\n              href={\"#\"}\r\n              onClick={() => onPageChange(page)}\r\n            >\r\n              {page}\r\n            </a>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\nPagination.propTypes = {\r\n  itemsCount: propTypes.number.isRequired,\r\n  pageSize: propTypes.number.isRequired,\r\n  currentPage: propTypes.number.isRequired,\r\n  onPageChange: propTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","E:\\Rachna\\vidly\\src\\components\\searchBox.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\filters.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\form.jsx",[],"E:\\Rachna\\vidly\\src\\components\\moviesTable.jsx",["141"],"import React, { Component } from \"react\";\r\nimport auth from \"../services/authService\";\r\nimport Table from \"./common/table\";\r\nimport Like from \"./common/like\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    {\r\n      path: \"title\",\r\n      label: \"Title\",\r\n      content: (movie) => (\r\n        <Link to={`/movies/${movie._id}`}>{movie.title}</Link>\r\n      ),\r\n    },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"react\",\r\n      content: (movie) => (\r\n        <Like\r\n          liked={movie.liked}\r\n          onClick={() => this.props.onLike(movie)}\r\n        ></Like>\r\n      ),\r\n    },\r\n  ];\r\n  deleteColumn = {\r\n    key: \"delete\",\r\n    content: (movie) => (\r\n      <button\r\n        className=\"btn  btn-danger\"\r\n        id={movie._id}\r\n        onClick={() => this.props.onDelete(movie)}\r\n      >\r\n        Delete\r\n      </button>\r\n    ),\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    const user = auth.getCurrentUser();\r\n    console.log(user);\r\n    if (user && user.isAdmin) {\r\n      this.columns.push(this.deleteColumn);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { movies, onSort, sortColumn, user } = this.props;\r\n    return (\r\n      <Table\r\n        columns={this.columns}\r\n        onSort={onSort}\r\n        sortColumn={sortColumn}\r\n        data={movies}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","E:\\Rachna\\vidly\\src\\components\\common\\input.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\select.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\table.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\like.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\tableHeader.jsx",[],"E:\\Rachna\\vidly\\src\\components\\common\\tableBody.jsx",[],{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":33,"column":1,"nodeType":"148","endLine":39,"endColumn":3},{"ruleId":"149","severity":1,"message":"150","line":10,"column":10,"nodeType":"151","messageId":"152","endLine":10,"endColumn":14},{"ruleId":"149","severity":1,"message":"153","line":94,"column":21,"nodeType":"151","messageId":"152","endLine":94,"endColumn":26},{"ruleId":"149","severity":1,"message":"154","line":103,"column":11,"nodeType":"151","messageId":"152","endLine":103,"endColumn":15},{"ruleId":"149","severity":1,"message":"155","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":13},{"ruleId":"149","severity":1,"message":"156","line":3,"column":15,"nodeType":"151","messageId":"152","endLine":3,"endColumn":21},{"ruleId":"149","severity":1,"message":"157","line":2,"column":17,"nodeType":"151","messageId":"152","endLine":2,"endColumn":22},{"ruleId":"146","severity":1,"message":"147","line":21,"column":1,"nodeType":"148","endLine":27,"endColumn":3},{"ruleId":"158","severity":1,"message":"159","line":20,"column":13,"nodeType":"160","endLine":24,"endColumn":14},{"ruleId":"149","severity":1,"message":"154","line":52,"column":41,"nodeType":"151","messageId":"152","endLine":52,"endColumn":45},"no-native-reassign",["161"],"no-negated-in-lhs",["162"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'user' is defined but never used.","Identifier","unusedVar","'count' is assigned a value but never used.","'user' is assigned a value but never used.","'React' is defined but never used.","'errors' is defined but never used.","'Toast' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation"]